---
title: "Simulation results"
author:  Janick Weberpals
date: "`r Sys.Date()`"
date-format: long
engine: knitr
execute:
  keep-md: true # md files are great for checking differences between versions
---

```{r}
#| label: setup
#| include: false

library(dplyr)
library(here)
library(arrow)
library(tictoc)
library(ggplot2)
library(gt)
library(rsimsum)
library(assertthat)
library(tidyr)
library(plotly)

tic()
```

## About

This script analyzes the raw simulation results obtained in the previous script via `run_simulation.R` and was last run on `r Sys.time()`.

## Read raw results table

We first read the results table with the raw simulation results.

```{r}
results <- read_parquet(file = here("data", "simulation_results.parquet")) |> 
  mutate(method = factor(method, levels = c("Unadjusted", "Complete case", "Imputed")))

results |> 
  glimpse()
```

## QC

Let's do a few quality/sanity checks.

-   Number of analysis methods

```{r}
unique(results$method)
```

-   Assert that there are no missing results

```{r}
assert_that(!any(sapply(results$estimate, is.na)), msg = "There are missing estimates")
assert_that(!any(sapply(results$se, is.na)), msg = "There are missing standard errors")
```

## Main results

```{r}
# call helper functions
source(here::here("functions", "rsimsum_ggplot.R"))
```

For the analysis of aggregate simulation results we use the `rsimsum` package. More information about this package can be found [here](https://ellessenne.github.io/rsimsum/).[@rsimsum]

```{r}
simsum_out <- simsum(
  data = results, 
  estvarname = "estimate", 
  se = "se", 
  true = 1, 
  by = "simulation",
  methodvar = "method", 
  ref = "Complete case"
  ) |> 
  summary() |> 
  tidy()
```



::: panel-tabset
### Hazard ratio distribution

```{r}
#| label: fig-hr_distribution
#| fig-cap: "Hazard ratio distribution by method across all simulated datasets."

hr_distribution <- results |> 
  ggplot(aes(x = method, y = estimate)) +
  geom_boxplot(outlier.colour = "red") +
  geom_point(position = position_jitter(seed = 42), alpha = 0.15) +
  geom_hline(yintercept = 1.0, color = "forestgreen", linetype = "dashed") +
  labs(
    x = "Method",
    y = "Hazard ratio (HR)"
    ) +
  theme_bw() +
  theme(
    axis.title.x = element_blank(),
    axis.text.x = element_text(angle = 35, vjust = 1, hjust=1)
    ) +
  facet_wrap(~simulation)

hr_distribution
```

### Hazard ratio distribution (interactive)

```{r}
ggplotly(hr_distribution)
```
:::


### Root mean squared error (RMSE)

```{r}
rmse <- rsimsum_ggplot(tidy_simsum = simsum_out, metric = "rmse")
```

::: panel-tabset
#### Plot

```{r}
#| label: fig-rmse
#| fig-cap: "Root mean squared error by method."
rmse$plot
```

#### Table

```{r}
#| label: tbl-rmse
#| tbl-cap: "Root mean squared error by method."
rmse$table |> 
  gt()
```
:::


### Bias

```{r}
bias <- rsimsum_ggplot(tidy_simsum = simsum_out, metric = "bias")
```

::: panel-tabset
#### Plot

```{r}
#| label: fig-bias
#| fig-cap: "Bias by method."

bias$plot
```

#### Table

```{r}
#| label: tbl-bias
#| tbl-cap: "Bias by method."

bias$table |> 
  gt()
```
:::


### Coverage

```{r}
coverage <- rsimsum_ggplot(tidy_simsum = simsum_out, metric = "coverage")
```

::: panel-tabset
#### Plot
```{r}
#| label: fig-coverage
#| fig-cap: "Coverage by method."

coverage$plot
```

#### Table
```{r}
#| label: tbl-coverage
#| tbl-cap: "Coverage by method."

coverage$table |> 
  gt()
```
:::


### Empirical standard error

```{r}
empse <- rsimsum_ggplot(tidy_simsum = simsum_out, metric = "empse")
```

::: panel-tabset

#### Plot

```{r}
#| label: fig-empse
#| fig-cap: "Empirical standard error by method."

empse$plot
```

#### Table

```{r}
#| label: tbl-empse
#| tbl-cap: "Empirical standard error by method."

empse$table |> 
  gt()
```
:::


## Session info

```{r, include=FALSE}
runtime <- toc()
```

Script runtime: `r formatC((runtime$toc[[1]]-runtime$tic[[1]])/60, format = 'f', digits = 2)` minutes.

::: panel-tabset
### Loaded packages

```{r}
pander::pander(subset(data.frame(sessioninfo::package_info()), attached==TRUE, c(package, loadedversion)))
```

### Session info

```{r}
pander::pander(sessionInfo())
```

### Repositories

```{r}
pander::pander(options('repos'))
```
:::
