[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A simple complete case analysis example",
    "section": "",
    "text": "Description\n\n\nObjective\nThe objective of this repository is to simulate a dataset with few very simple missingness scenarios and evaluate bias based on (a) on which covariates are involved in the missingness generating mechanism and (b) the strength of association between covariates."
  },
  {
    "objectID": "01_data_generation.html",
    "href": "01_data_generation.html",
    "title": "1  Data generation",
    "section": "",
    "text": "2 Objective\nThe objective of this repository is to simulate a dataset with few very simple missingness scenarios and evaluate bias based on (a) on which covariates are involved in the missingness generating mechanism and (b) the strength of association between covariates.\nThe first step involves the generation of a complete dataset with realistic distributions and associations between covariates.\nThe desired distributions as observed in the dataset.\nn_total &lt;- 10000\n\n# observed distributions from data\n\n## expoure\nX_prevalence &lt;- 0.68\n\n## Z2 (serum creatinine) in exposed and unexposed\nZ2_mean_exposed &lt;- 0.85\nZ2_sd_exposed &lt;- 0.23\n\nZ2_mean_unexposed &lt;- 0.88\nZ2_sd_unexposed &lt;- 0.23\n\n## U (glaucoma or cataract)\nU_unexposed &lt;- 0.11\nU_exposed &lt;- 0.20"
  },
  {
    "objectID": "01_data_generation.html#generate-exposure-and-covariates",
    "href": "01_data_generation.html#generate-exposure-and-covariates",
    "title": "1  Data generation",
    "section": "3.1 Generate exposure and covariates",
    "text": "3.1 Generate exposure and covariates\n\n\nCode\n# Set the seed\nset.seed(42)\n\n# Build the total cohort\ncohort_X_Z2_U &lt;- tibble(\n    X = rbinom(n = n_total, size = 1, prob = X_prevalence),\n    Z2 = ifelse(\n      X == 1, \n      rnorm(n = n_total, mean = Z2_mean_exposed, sd = Z2_sd_exposed),\n      rnorm(n = n_total, mean = Z2_mean_unexposed, sd = Z2_sd_unexposed)\n      ),\n    U = ifelse(\n      X == 1, \n      rbinom(n = n_total, size = 1, prob = U_exposed),\n      rbinom(n = n_total, size = 1, prob = U_unexposed)\n      ),\n    )\n\ncohort_X_Z2_U |&gt; \n  glimpse()\n\n\nRows: 10,000\nColumns: 3\n$ X  &lt;int&gt; 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0…\n$ Z2 &lt;dbl&gt; 0.6453516, 0.7065416, 0.9213081, 0.6461119, 0.7749484, 0.8226738, 1…\n$ U  &lt;int&gt; 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\n3.1.1 Table 1 by exposure\nDisplay covariate distributions by exposure.\n\n\nCode\ncohort_X_Z2_U |&gt; \n  tbl_summary(by = X) |&gt; \n  add_difference()\n\n\n\n\n\n\nTable 3.1:  Covariate distributions by exposure. \n  \n    \n      Characteristic\n      0, N = 3,2131\n      1, N = 6,7871\n      Difference2\n      95% CI2,3\n      p-value2\n    \n  \n  \n    Z2\n0.88 (0.72, 1.03)\n0.85 (0.69, 1.01)\n0.03\n0.02, 0.04\n&lt;0.001\n    U\n366 (11%)\n1,381 (20%)\n-9.0%\n-10%, -7.5%\n&lt;0.001\n  \n  \n  \n    \n      1 Median (IQR); n (%)\n    \n    \n      2 Welch Two Sample t-test; Two sample test for equality of proportions\n    \n    \n      3 CI = Confidence Interval\n    \n  \n\n\n\n\n\n\n\n3.1.2 Odds ratios\nOdds rations for the strength of association between covariates and exposure.\n\n\nCode\nodds &lt;- stats::glm(\n  formula = X ~ Z2 + U,\n  data = cohort_X_Z2_U,\n  family = \"binomial\"\n  )\n\nodds |&gt; \n  gtsummary::tbl_regression(exponentiate = T)\n\n\n\n\n\n\nTable 3.2:  Odds rations for the strength of association between covariates and\nexposure. \n  \n    \n      Characteristic\n      OR1\n      95% CI1\n      p-value\n    \n  \n  \n    Z2\n0.54\n0.45, 0.64\n&lt;0.001\n    U\n1.99\n1.76, 2.25\n&lt;0.001\n  \n  \n  \n    \n      1 OR = Odds Ratio, CI = Confidence Interval"
  },
  {
    "objectID": "01_data_generation.html#generate-outcome",
    "href": "01_data_generation.html#generate-outcome",
    "title": "1  Data generation",
    "section": "3.2 Generate outcome",
    "text": "3.2 Generate outcome\nGenerate the outcome with a desired event rate of ~40 events/1,000 person-years of follow-up.\n\n\nCode\nbetas_os &lt;- c(\n  X = log(1),\n  Z2 = log(5.16),\n  U = log(1.48)\n  )\n\nset.seed(42)\ncohort &lt;- cohort_X_Z2_U |&gt; \n  bind_cols(\n    simsurv(\n      dist = \"exponential\",\n      lambdas = 0.0087,\n      betas = betas_os,\n      x = cohort_X_Z2_U,\n      maxt = 10\n      )\n    ) |&gt;  \n  select(-id)\n\n# event-rate per 1000 person-years of follow-up\n# in original data: ~40 events per 1000 person-years\nevent_rate_per_1000py &lt;- round(sum(cohort$status)/sum(cohort$eventtime)*1000, 2)\n\n\n\nResulting/simulated event rate per 1,000 person-years: 40.45"
  },
  {
    "objectID": "01_data_generation.html#survival",
    "href": "01_data_generation.html#survival",
    "title": "1  Data generation",
    "section": "3.3 Survival",
    "text": "3.3 Survival\n\n\nCode\nkm_exposure &lt;- survfit2(formula = survival::Surv(eventtime, status) ~ X, data = cohort)\n\nggsurvfit(\n  x = km_exposure, \n  type = \"survival\",\n  linewidth = 1\n  ) +\n  add_confidence_interval() +\n  add_pvalue(caption = \"Log-rank {p.value}\")\n\n\n\n\n\nFigure 3.1: Kaplan-Meier plot (unadjusted) by exposure.\n\n\n\n\nNext, let’s compute the univariate and multivariate beta coefficients (hazard ratios [HR]).\n\nBeta unadjusted:\n\n\n\nCode\ncox_fit_unadjusted &lt;- survival::coxph(formula = Surv(eventtime, status) ~ X, data = cohort)\n\ncox_fit_unadjusted |&gt;  \n  gtsummary::tbl_regression(exponentiate = T)\n\n\n\n\n\n\nTable 3.3:  Univariate hazard ratio. \n  \n    \n      Characteristic\n      HR1\n      95% CI1\n      p-value\n    \n  \n  \n    X\n1.02\n0.95, 1.10\n0.5\n  \n  \n  \n    \n      1 HR = Hazard Ratio, CI = Confidence Interval\n    \n  \n\n\n\n\n\n\nBeta adjusted:\n\n\n\nCode\ncox_fit_adjusted &lt;- survival::coxph(formula = Surv(eventtime, status) ~ X + Z2 + U, data = cohort)\n\ncox_fit_adjusted |&gt;  \n  gtsummary::tbl_regression(exponentiate = T)\n\n\n\n\n\n\nTable 3.4:  Multivariate hazard ratio. \n  \n    \n      Characteristic\n      HR1\n      95% CI1\n      p-value\n    \n  \n  \n    X\n1.04\n0.96, 1.12\n0.3\n    Z2\n5.24\n4.52, 6.08\n&lt;0.001\n    U\n1.46\n1.34, 1.59\n&lt;0.001\n  \n  \n  \n    \n      1 HR = Hazard Ratio, CI = Confidence Interval\n    \n  \n\n\n\n\n\n\n\n\nCode\narrow::write_parquet(\n  x = cohort,\n  sink = here(\"data\", \"data.parquet\")\n  )"
  },
  {
    "objectID": "01_data_generation.html#session-info",
    "href": "01_data_generation.html#session-info",
    "title": "1  Data generation",
    "section": "3.4 Session info",
    "text": "3.4 Session info\nScript runtime: minutes.\n\nLoaded packagesSession infoRepositories\n\n\n\n\nCode\npander::pander(subset(data.frame(sessioninfo::package_info()), attached==TRUE, c(package, loadedversion)))\n\n\n\n\n\n\n\n\n\n\n \npackage\nloadedversion\n\n\n\n\narrow\narrow\n14.0.0.2\n\n\ndplyr\ndplyr\n1.1.4\n\n\nggplot2\nggplot2\n3.4.4\n\n\nggsurvfit\nggsurvfit\n1.0.0\n\n\ngtsummary\ngtsummary\n1.7.2\n\n\nhere\nhere\n1.0.1\n\n\nsimsurv\nsimsurv\n1.0.0\n\n\nsurvival\nsurvival\n3.5-8\n\n\ntibble\ntibble\n3.2.1\n\n\n\n\n\n\n\n\n\nCode\npander::pander(sessionInfo())\n\n\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nlocale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8\nattached base packages: stats, graphics, grDevices, datasets, utils, methods and base\nother attached packages: arrow(v.14.0.0.2), here(v.1.0.1), gtsummary(v.1.7.2), ggplot2(v.3.4.4), ggsurvfit(v.1.0.0), survival(v.3.5-8), dplyr(v.1.1.4), simsurv(v.1.0.0) and tibble(v.3.2.1)\nloaded via a namespace (and not attached): gtable(v.0.3.4), xfun(v.0.41), htmlwidgets(v.1.6.4), lattice(v.0.22-5), vctrs(v.0.6.5), tools(v.4.3.2), generics(v.0.1.3), fansi(v.1.0.6), pkgconfig(v.2.0.3), Matrix(v.1.6-4), assertthat(v.0.2.1), gt(v.0.10.1), lifecycle(v.1.0.4), compiler(v.4.3.2), farver(v.2.1.1), stringr(v.1.5.1), tictoc(v.1.2), munsell(v.0.5.0), htmltools(v.0.5.7), sass(v.0.4.8), yaml(v.2.3.8), pillar(v.1.9.0), tidyr(v.1.3.1), MASS(v.7.3-60), ellipsis(v.0.3.2), broom.helpers(v.1.14.0), sessioninfo(v.1.2.2), commonmark(v.1.9.1), tidyselect(v.1.2.0), digest(v.0.6.33), stringi(v.1.8.3), purrr(v.1.0.2), pander(v.0.6.5), labeling(v.0.4.3), forcats(v.1.0.0), splines(v.4.3.2), labelled(v.2.12.0), rprojroot(v.2.0.4), fastmap(v.1.1.1), grid(v.4.3.2), colorspace(v.2.1-0), cli(v.3.6.2), magrittr(v.2.0.3), utf8(v.1.2.4), broom(v.1.0.5), withr(v.3.0.0), scales(v.1.3.0), backports(v.1.4.1), bit64(v.4.0.5), rmarkdown(v.2.25), bit(v.4.0.5), hms(v.1.1.3), evaluate(v.0.23), knitr(v.1.45), haven(v.2.5.4), markdown(v.1.12), rlang(v.1.1.2), Rcpp(v.1.0.12), glue(v.1.6.2), xml2(v.1.3.6), renv(v.1.0.3), jsonlite(v.1.8.8) and R6(v.2.5.1)\n\n\n\n\n\n\nCode\npander::pander(options('repos'))\n\n\n\nrepos:\n\n\n\n\n\n\nREPO_NAME\n\n\n\n\nhttps://packagemanager.posit.co/cran/latest"
  },
  {
    "objectID": "02_missingness_generation.html#objective",
    "href": "02_missingness_generation.html#objective",
    "title": "2  Missingness generation",
    "section": "2.1 Objective",
    "text": "2.1 Objective\nIn this section, we detail the process with which the mice::ampute function is used to impose missingness on one or multiple pre-specified variables. For this example, let…\n\n\\(X\\) be a binary exposure\n\\(Y\\) be a time-to-event outcome with the follow-up time until event or censoring (eventtime) and event indicator (status)\n\\(Z2\\) be continuous confounder\n\\(U\\) be a binary prognostic factor (associated with outcome but not exposure)\n\n\n\nCode\ncohort &lt;- arrow::read_parquet(here(\"data\", \"data.parquet\"))\n\n#| label: tbl-tbl1\n#| tbl-cap: \"Covariate distributions by exposure.\"\n\ncohort |&gt; \n  select(X, Z2, U) |&gt; \n  tbl_summary(by = X) |&gt; \n  add_difference()\n\n\n\n\n\n\n  \n    \n      Characteristic\n      0, N = 3,2131\n      1, N = 6,7871\n      Difference2\n      95% CI2,3\n      p-value2\n    \n  \n  \n    Z2\n0.88 (0.72, 1.03)\n0.85 (0.69, 1.01)\n0.03\n0.02, 0.04\n&lt;0.001\n    U\n366 (11%)\n1,381 (20%)\n-9.0%\n-10%, -7.5%\n&lt;0.001\n  \n  \n  \n    \n      1 Median (IQR); n (%)\n    \n    \n      2 Welch Two Sample t-test; Two sample test for equality of proportions\n    \n    \n      3 CI = Confidence Interval\n    \n  \n\n\n\n\nLet’s further assume that we want to simulate missingness only in \\(Z2\\). The corresponding missingness indicator for \\(Z2\\) is denoted as \\(M_{Z2}\\).\n\nGenerally, the mice::ampute allows to simulate complex multivariate missingness patterns and mechanisms. For example, multiple different patterns with different underlying frequencies/prevalences and missingness mechanisms can be simulated. Pattern in this context if defined as a combination of missingness on specific variables while other variables remain complete.\nFor this example, we just consider a single missingness pattern for \\(M2\\), for which, simply speaking, the probability for \\(M_{Z2}\\) is imposed using the covariate values Z2 and U.\n\\[Pr(M_{Z2}|Z2,U) = Z2 + U\\] The detailed steps are illustrated in the following."
  },
  {
    "objectID": "02_missingness_generation.html#step-1-assigning-a-missingness-pattern",
    "href": "02_missingness_generation.html#step-1-assigning-a-missingness-pattern",
    "title": "2  Missingness generation",
    "section": "2.2 Step 1: Assigning a missingness pattern",
    "text": "2.2 Step 1: Assigning a missingness pattern\nIn a first step, we assign the missingness pattern. To that end, we create a vector with the length of the number of covariates that denotes which covariates should be become partially missing (denoted by a value of 0) and which should remain complete (denoted by a value of 1).\n\n\nCode\n# define column numbers for pattern and weight determination\ncol_Z2 &lt;- which(colnames(cohort) %in% \"Z2\")\ncol_U &lt;- which(colnames(cohort) %in% \"U\")\n\n# define missingness pattern\ndefault_pattern &lt;- rep(1, ncol(cohort))\npattern &lt;- replace(default_pattern, col_Z2, 0)\n\ntibble(\n  Variable = colnames(cohort),\n  Pattern = pattern\n  ) |&gt; \n  gt()\n\n\n\n\n\n\nTable 2.1:  Assigned missingness pattern matrix. \n  \n    \n      Variable\n      Pattern\n    \n  \n  \n    X\n1\n    Z2\n0\n    U\n1\n    eventtime\n1\n    status\n1\n  \n  \n  \n\n\n\n\n\nAs you can see, only \\(Z2\\) was assigned a value of 0, indicating that we will impose missing only on this covariate."
  },
  {
    "objectID": "02_missingness_generation.html#step-2-assigning-weights",
    "href": "02_missingness_generation.html#step-2-assigning-weights",
    "title": "2  Missingness generation",
    "section": "2.3 Step 2: Assigning weights",
    "text": "2.3 Step 2: Assigning weights\nFor MAR and MNAR mechanisms, the probability of an individual \\(i\\) to have an observed or missing \\(Z2\\) is calculated using a weighted sum score. This calculation depends on the values of covariates which we define as predictors to impose missingness on \\(Z2\\) as well as pre-specified weights which are manipulated by the user through a vector or matrix. To that end, predictors will be assigned a non-zero value which indicates the weight this variable receives. For example, if \\(Z2 = 2\\) and \\(U = 1\\), \\(Z2's\\) influence would be twice as large as \\(U's\\) influence. The scale here is relative, which means that \\(Z2 = 2\\) and \\(U = 1\\) would be the same as \\(Z2 = 0.2\\) and \\(U = 0.8\\).\nIn this example, we assign weights of 0.2 and 0.8 to \\(Z2\\) and \\(U\\), respectively, which means that \\(U\\) has a larger weight.\n\n\nCode\ndefault_weights &lt;- rep(0, ncol(cohort))\n\n# replace the predictor columns with a 1 or non-zero value\nweights &lt;- replace(default_weights, c(col_Z2, col_U), c(0.2, 0.8))\n\ntibble(\n  Variable = colnames(cohort),\n  Weights = weights\n  ) |&gt; \n  gt()\n\n\n\n\n\n\nTable 2.2:  Assigned missingness weights matrix. \n  \n    \n      Variable\n      Weights\n    \n  \n  \n    X\n0.0\n    Z2\n0.2\n    U\n0.8\n    eventtime\n0.0\n    status\n0.0"
  },
  {
    "objectID": "02_missingness_generation.html#step-3-computing-a-scaled-weighted-sum-score-wss",
    "href": "02_missingness_generation.html#step-3-computing-a-scaled-weighted-sum-score-wss",
    "title": "2  Missingness generation",
    "section": "2.4 Step 3: Computing a (scaled) weighted sum score (wss)",
    "text": "2.4 Step 3: Computing a (scaled) weighted sum score (wss)\nThe way mice::ampute eventually computes the probability of an individual \\(i\\) to have an observed or missing \\(Z2\\) is calculated using a weighted sum score.\n\nmice::ampute documentation: A weighted sum score is simply the outcome of a linear regression equation where the coefficients are the values of the weights matrix. When data row i is a candidate for pattern k, the weighted sum score is therefore: \\[\\begin{equation*}\nwss_i = w_{k,1} \\cdot y_{1,i} + w_{k,2} \\cdot y_{2,i} + ... + w_{k,m} \\cdot y_{m,i},\n\\end{equation*}\\]\n\nwhere \\({y_{1,i},y_{2,i},...,y_{m,i}}\\) is the set of variable values of case i and \\({w_{k,1},w_{k,2},...,w_{k,m}}\\) are the pre-specified weights on row k of the weights matrix.\nIn our example, m=2 and k∈{1} because there are two variable \\(Z2\\) and \\(U\\) with a single missing data pattern.\nThe weighted sum score is additionally scaled using the scale function.\n\n\\[wss_{scaled} = \\frac{wss - \\bar{wss}}{sd_{wss}}\\]"
  },
  {
    "objectID": "02_missingness_generation.html#step-4-converting-wss-to-probabilities",
    "href": "02_missingness_generation.html#step-4-converting-wss-to-probabilities",
    "title": "2  Missingness generation",
    "section": "2.5 Step 4: Converting wss to probabilities",
    "text": "2.5 Step 4: Converting wss to probabilities\n\n2.5.1 Option 1: Logistic probabilities based on continuous weighted sum score\nThe scaled weighted sum scores are then eventually converted into actual probabilities for individual \\(i\\) to have an observed or missing \\(Z2\\). To that end, the mice::ampute function provides different logistic probability distributions:\n\n\nCode\ntibble(\n  Type = c(\n    \"RIGHT\",\n    \"LEFT\",\n    \"MID\",\n    \"TAIL\"),\n  Formula = c(\n    \"$$\\\\text{logit}(-\\\\text{mean}(wss) + x + b)$$\",\n    \"$$\\\\text{logit}(\\\\text{mean}(wss) - wss + b)$$\",\n    \"$$\\\\text{logit}(-\\\\text{abs}(wss - \\\\text{mean}(wss)) + 0.75 + b)$$\",\n    \"$$\\\\text{logit}(\\\\text{abs}(wss - \\\\text{mean}(wss)) - 0.75 + b)$$\"\n    )\n  ) |&gt; \n  gt() |&gt; \n  gt::tab_footnote(\n    footnote = \"Note: b is a shift parameter that adjusts the probability curves to receive the desired proportion of missingness\"\n    ) |&gt; \n  fmt_markdown()\n\n\n\n\n\n\nTable 2.3:  Logistic probability distributions to convert wss to missingness\nprobabilities. \n  \n    \n      Type\n      Formula\n    \n  \n  \n    RIGHT\n\n$$\\text{logit}(-\\text{mean}(wss) + x + b)$$\n\n    LEFT\n\n$$\\text{logit}(\\text{mean}(wss) - wss + b)$$\n\n    MID\n\n$$\\text{logit}(-\\text{abs}(wss - \\text{mean}(wss)) + 0.75 + b)$$\n\n    TAIL\n\n$$\\text{logit}(\\text{abs}(wss - \\text{mean}(wss)) - 0.75 + b)$$\n\n  \n  \n  \n    \n       Note: b is a shift parameter that adjusts the probability curves to receive the desired proportion of missingness\n    \n  \n\n\n\n\n\n\n\nCode\n# Define the probability distribution functions\nRIGHT &lt;- function(x) exp(x) / (1 + exp(x))\nLEFT &lt;- function(x, b) plogis(mean(x) - x + b)\nMID &lt;- function(x, b) plogis(-abs(x - mean(x)) + 0.75 + b)\nTAIL &lt;- function(x, b) plogis(abs(x - mean(x)) - 0.75 + b)\n\n# Create a sequence of x values\nx &lt;- seq(-5, 5, length.out = 100)\n\n# Evaluate the functions at x\nright_values &lt;- RIGHT(x)\nleft_values &lt;- LEFT(x, b = 0)\nmid_values &lt;- MID(x, b = 0)\ntail_values &lt;- TAIL(x, b = 0)\n\n# Create a data frame for ggplot\ndf &lt;- data.frame(\n  x = rep(x, 4),\n  y = c(right_values, left_values, mid_values, tail_values),\n  type = rep(c(\"RIGHT\", \"LEFT\", \"MID\", \"TAIL\"), each = length(x))\n  )\n\n# Plot using ggplot\nggplot(df, aes(x = x, y = y, color = type, linetype = type)) +\n  geom_line() +\n  labs(\n    x = \"Weighted sum score (wss)\", \n    y = \"Probability\",\n    color = \"Type\",\n    linetype = \"Type\",\n    title = \"Probability Distributions based on weighted sum score\"\n    ) +\n  theme_bw() +\n  scale_color_colorblind() +\n  theme(legend.position = \"top\")\n\n\n\n\n\nFigure 2.1: Logistic probability distributions to convert \\(wss\\) to missingness probabilities.\n\n\n\n\nIf we apply the RIGHT probability distribution type to our simulated data, the missingness probability looks like this.\n\n\nCode\nset.seed(42)\ndata_miss &lt;- mice::ampute(\n  data = cohort,\n  prop = 0.5,\n  mech = \"MAR\",\n  patterns = pattern,\n  weights = weights,\n  bycases = TRUE,\n  type = \"RIGHT\"\n  )\n\nwss &lt;- cohort |&gt; \n  mutate(wss = unlist(data_miss$scores)) |&gt; \n  mutate(pr = RIGHT(wss))\n\nggplot(wss, aes(x = wss, y = pr)) +\n  geom_line() +\n  #geom_point(aes(x = scale(Z2), y = pr), alpha = 0.1) +\n  labs(\n    x = \"Standardized weighted sum score (wss)\", \n    y = \"Probability\"\n    ) +\n  theme_bw() +\n  scale_color_colorblind() +\n  theme(legend.position = \"top\")\n\n\n\n\n\nFigure 2.2: \\(RIGHT\\) ogistic probability distributions to convert \\(wss\\) to missingness probabilities. Here patients with higher \\(Z2\\) values and those with \\(U\\) present have higher \\(wss\\) and are more likely to become missing.\n\n\n\n\n\n\n2.5.2 Option 2: Discrete probabilities based on continuous weighted sum score quantiles\nAn alternative to using the different logistic probability distributions to map the weighted sum scores to a missingness probablity is to use discrete probabilities as described in Brand (1999, pp. 110-113). The weighted sum scores of all patients are divided over a certain number of equally sized groups, or quantiles. An odds value defines the relative probability of each quantile group of becoming incomplete. In the following example, the weighted sum scores are divided over 4 groups/quantile with the highest quantile having a four-fold odds of having a missing value for \\(Z2\\).\n\n\nCode\n# replace the predictor columns with a 1 or non-zero value\nodds &lt;- c(1, 2, 3, 4)\n\nset.seed(42)\ndata_miss &lt;- mice::ampute(\n  data = cohort,\n  prop = 0.5,\n  mech = \"MAR\",\n  patterns = pattern,\n  weights = weights,\n  bycases = TRUE,\n  cont = FALSE,\n  odds = odds\n  )\n\nwss &lt;- cohort |&gt; \n  mutate(wss = unlist(data_miss$scores)) |&gt; \n  mutate(quantile = ntile(x = wss, n = 4)) |&gt; \n  mutate(isNA = is.na(data_miss$amp$Z2))\n\nggplot(wss, aes(x = wss, y = quantile, color = factor(isNA))) +\n  geom_point(alpha = 0.3) +\n  labs(\n    x = \"Standardized weighted sum score (wss)\", \n    y = \"Quantile\",\n    color = \"Is NA\"\n    ) +\n  theme_bw() +\n  scale_color_colorblind() +\n  theme(legend.position = \"top\")\n\n\n\n\n\nFigure 2.3: Imposed missingness based on scaled weighted sum score and corresponding quantile membership."
  },
  {
    "objectID": "02_missingness_generation.html#session-info",
    "href": "02_missingness_generation.html#session-info",
    "title": "2  Missingness generation",
    "section": "2.6 Session info",
    "text": "2.6 Session info\nScript runtime: minutes.\n\nLoaded packagesSession infoRepositories\n\n\n\n\nCode\npander::pander(subset(data.frame(sessioninfo::package_info()), attached==TRUE, c(package, loadedversion)))\n\n\n\n\n\n\n\n\n\n\n \npackage\nloadedversion\n\n\n\n\narrow\narrow\n14.0.0.2\n\n\ndplyr\ndplyr\n1.1.4\n\n\nggplot2\nggplot2\n3.4.4\n\n\nggsurvfit\nggsurvfit\n1.0.0\n\n\nggthemes\nggthemes\n5.1.0\n\n\ngt\ngt\n0.10.1\n\n\ngtools\ngtools\n3.9.5\n\n\ngtsummary\ngtsummary\n1.7.2\n\n\nhere\nhere\n1.0.1\n\n\nmice\nmice\n3.16.0\n\n\nsurvival\nsurvival\n3.5-8\n\n\n\n\n\n\n\n\n\nCode\npander::pander(sessionInfo())\n\n\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nlocale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8\nattached base packages: stats, graphics, grDevices, datasets, utils, methods and base\nother attached packages: mice(v.3.16.0), gtools(v.3.9.5), ggthemes(v.5.1.0), gtsummary(v.1.7.2), gt(v.0.10.1), ggplot2(v.3.4.4), ggsurvfit(v.1.0.0), survival(v.3.5-8), dplyr(v.1.1.4), arrow(v.14.0.0.2) and here(v.1.0.1)\nloaded via a namespace (and not attached): gtable(v.0.3.4), shape(v.1.4.6), xfun(v.0.41), htmlwidgets(v.1.6.4), lattice(v.0.22-5), vctrs(v.0.6.5), tools(v.4.3.2), generics(v.0.1.3), tibble(v.3.2.1), fansi(v.1.0.6), pan(v.1.9), pkgconfig(v.2.0.3), jomo(v.2.7-6), Matrix(v.1.6-4), assertthat(v.0.2.1), lifecycle(v.1.0.4), farver(v.2.1.1), compiler(v.4.3.2), stringr(v.1.5.1), tictoc(v.1.2), munsell(v.0.5.0), codetools(v.0.2-19), sass(v.0.4.8), htmltools(v.0.5.7), yaml(v.2.3.8), glmnet(v.4.1-8), nloptr(v.2.0.3), pillar(v.1.9.0), tidyr(v.1.3.1), MASS(v.7.3-60), broom.helpers(v.1.14.0), sessioninfo(v.1.2.2), iterators(v.1.0.14), rpart(v.4.1.23), boot(v.1.3-28.1), foreach(v.1.5.2), mitml(v.0.4-5), nlme(v.3.1-164), commonmark(v.1.9.1), tidyselect(v.1.2.0), digest(v.0.6.33), stringi(v.1.8.3), pander(v.0.6.5), purrr(v.1.0.2), labeling(v.0.4.3), forcats(v.1.0.0), splines(v.4.3.2), rprojroot(v.2.0.4), fastmap(v.1.1.1), grid(v.4.3.2), colorspace(v.2.1-0), cli(v.3.6.2), magrittr(v.2.0.3), utf8(v.1.2.4), broom(v.1.0.5), withr(v.3.0.0), scales(v.1.3.0), backports(v.1.4.1), bit64(v.4.0.5), rmarkdown(v.2.25), nnet(v.7.3-19), bit(v.4.0.5), lme4(v.1.1-35.1), evaluate(v.0.23), knitr(v.1.45), markdown(v.1.12), rlang(v.1.1.2), Rcpp(v.1.0.12), glue(v.1.6.2), xml2(v.1.3.6), renv(v.1.0.3), minqa(v.1.2.6), jsonlite(v.1.8.8) and R6(v.2.5.1)\n\n\n\n\n\n\nCode\npander::pander(options('repos'))\n\n\n\nrepos:\n\n\n\n\n\n\nREPO_NAME\n\n\n\n\nhttps://packagemanager.posit.co/cran/latest"
  },
  {
    "objectID": "03_run_simulation.html#objective",
    "href": "03_run_simulation.html#objective",
    "title": "3  Simulation script",
    "section": "3.1 Objective",
    "text": "3.1 Objective\nIn this section, we will generate 1000 following different missingness scenarios.\n\n\nCode\n# order is X, Z2, U, eventtime, status\npattern &lt;- c(1, 0, 1, 1, 1)\nweights &lt;- c(0, 0.8, 0.2, 0, 0)\nprop &lt;- 0.5"
  },
  {
    "objectID": "03_run_simulation.html#continuous-distribution-probabilities",
    "href": "03_run_simulation.html#continuous-distribution-probabilities",
    "title": "3  Simulation script",
    "section": "3.2 Continuous distribution probabilities",
    "text": "3.2 Continuous distribution probabilities\nProbabilities are based on a continuous distribution.\n\n\nCode\ntic(msg = \"Simulation based on continuous distribution\")\n\nresults &lt;- parallel::mclapply(\n  X = 1:n_replicates,\n  FUN = run_simulation,\n  pattern = pattern,\n  weights = weights,\n  type = \"RIGHT\",\n  prop = prop,\n  mc.cores = parallel::detectCores()-1\n  ) \n  \nresults_cont &lt;- do.call(rbind, results) |&gt; \n  mutate(simulation = \"Continuous distribution (RIGHT)\")\n\ntoc()\n\n\nSimulation based on continuous distribution: 207.511 sec elapsed"
  },
  {
    "objectID": "03_run_simulation.html#discrete-distribution-probabilities",
    "href": "03_run_simulation.html#discrete-distribution-probabilities",
    "title": "3  Simulation script",
    "section": "3.3 Discrete distribution probabilities",
    "text": "3.3 Discrete distribution probabilities\nProbabilities are based on a discrete distribution.\n\n\nCode\ntic(msg = \"Simulation based on discrete distribution\")\n\nodds &lt;- c(1, 2, 3, 4)\n\nresults &lt;- parallel::mclapply(\n  X = 1:n_replicates,\n  FUN = run_simulation,\n  pattern = pattern,\n  weights = weights,\n  odds = odds,\n  prop = prop,\n  mc.cores = parallel::detectCores()-1\n  ) \n  \nresults_odds &lt;- do.call(rbind, results) |&gt; \n  mutate(simulation = paste0(\"Discrete odds (\", paste0(odds, collapse = \", \"), \")\"))\n\ntoc()\n\n\nSimulation based on discrete distribution: 224.467 sec elapsed"
  },
  {
    "objectID": "03_run_simulation.html#save-simulation-results",
    "href": "03_run_simulation.html#save-simulation-results",
    "title": "3  Simulation script",
    "section": "3.4 Save simulation results",
    "text": "3.4 Save simulation results\n\n\nCode\nresults_all &lt;- rbind(results_cont, results_odds)\n\nwrite_parquet(\n  x = results_all, \n  sink = here(\"data\", \"simulation_results.parquet\")\n  )"
  },
  {
    "objectID": "03_run_simulation.html#session-info",
    "href": "03_run_simulation.html#session-info",
    "title": "3  Simulation script",
    "section": "3.5 Session info",
    "text": "3.5 Session info\nTotal script runtime: 7.20 minutes.\n\nLoaded packagesSession infoRepositories\n\n\n\n\nCode\npander::pander(subset(data.frame(sessioninfo::package_info()), attached==TRUE, c(package, loadedversion)))\n\n\n\n\n\n\n\n\n\n\n \npackage\nloadedversion\n\n\n\n\narrow\narrow\n14.0.0.2\n\n\ndplyr\ndplyr\n1.1.4\n\n\nhere\nhere\n1.0.1\n\n\ntictoc\ntictoc\n1.2\n\n\n\n\n\n\n\n\n\nCode\npander::pander(sessionInfo())\n\n\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nlocale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8\nattached base packages: parallel, stats, graphics, grDevices, datasets, utils, methods and base\nother attached packages: tictoc(v.1.2), dplyr(v.1.1.4), arrow(v.14.0.0.2) and here(v.1.0.1)\nloaded via a namespace (and not attached): vctrs(v.0.6.5), cli(v.3.6.2), knitr(v.1.45), rlang(v.1.1.2), xfun(v.0.41), purrr(v.1.0.2), renv(v.1.0.3), generics(v.0.1.3), assertthat(v.0.2.1), jsonlite(v.1.8.8), glue(v.1.6.2), bit(v.4.0.5), rprojroot(v.2.0.4), htmltools(v.0.5.7), fansi(v.1.0.6), rmarkdown(v.2.25), pander(v.0.6.5), tibble(v.3.2.1), evaluate(v.0.23), fastmap(v.1.1.1), yaml(v.2.3.8), lifecycle(v.1.0.4), compiler(v.4.3.2), sessioninfo(v.1.2.2), Rcpp(v.1.0.12), pkgconfig(v.2.0.3), htmlwidgets(v.1.6.4), digest(v.0.6.33), R6(v.2.5.1), utf8(v.1.2.4), tidyselect(v.1.2.0), pillar(v.1.9.0), magrittr(v.2.0.3), tools(v.4.3.2) and bit64(v.4.0.5)\n\n\n\n\n\n\nCode\npander::pander(options('repos'))\n\n\n\nrepos:\n\n\n\n\n\n\nREPO_NAME\n\n\n\n\nhttps://packagemanager.posit.co/cran/latest"
  },
  {
    "objectID": "04_simulation_results.html#about",
    "href": "04_simulation_results.html#about",
    "title": "4  Simulation results",
    "section": "4.1 About",
    "text": "4.1 About\nThis script analyzes the raw simulation results obtained in the previous script via run_simulation.R and was last run on 2024-03-04 15:46:35.134269."
  },
  {
    "objectID": "04_simulation_results.html#read-raw-results-table",
    "href": "04_simulation_results.html#read-raw-results-table",
    "title": "4  Simulation results",
    "section": "4.2 Read raw results table",
    "text": "4.2 Read raw results table\nWe first read the results table with the raw simulation results.\n\n\nCode\nresults &lt;- read_parquet(file = here(\"data\", \"simulation_results.parquet\")) |&gt; \n  mutate(method = factor(method, levels = c(\"Unadjusted\", \"Complete case\", \"Imputed\")))\n\nresults |&gt; \n  glimpse()\n\n\nRows: 6,000\nColumns: 5\n$ method     &lt;fct&gt; Unadjusted, Complete case, Imputed, Unadjusted, Complete ca…\n$ estimate   &lt;dbl&gt; 1.0810100, 1.0312457, 1.1821327, 0.9628319, 0.5999282, 1.01…\n$ se         &lt;dbl&gt; 0.07540090, 0.13014871, 0.19584325, 0.07442175, 0.14116245,…\n$ replicate  &lt;int&gt; 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7,…\n$ simulation &lt;chr&gt; \"Continuous distribution (RIGHT)\", \"Continuous distribution…"
  },
  {
    "objectID": "04_simulation_results.html#qc",
    "href": "04_simulation_results.html#qc",
    "title": "4  Simulation results",
    "section": "4.3 QC",
    "text": "4.3 QC\nLet’s do a few quality/sanity checks.\n\nNumber of analysis methods\n\n\n\nCode\nunique(results$method)\n\n\n[1] Unadjusted    Complete case Imputed      \nLevels: Unadjusted Complete case Imputed\n\n\n\nAssert that there are no missing results\n\n\n\nCode\nassert_that(!any(sapply(results$estimate, is.na)), msg = \"There are missing estimates\")\n\n\n[1] TRUE\n\n\nCode\nassert_that(!any(sapply(results$se, is.na)), msg = \"There are missing standard errors\")\n\n\n[1] TRUE"
  },
  {
    "objectID": "04_simulation_results.html#main-results",
    "href": "04_simulation_results.html#main-results",
    "title": "4  Simulation results",
    "section": "4.4 Main results",
    "text": "4.4 Main results\n\n\nCode\n# call helper functions\nsource(here::here(\"functions\", \"rsimsum_ggplot.R\"))\n\n\nFor the analysis of aggregate simulation results we use the rsimsum package. More information about this package can be found here.[@rsimsum]\n\n\nCode\nsimsum_out &lt;- simsum(\n  data = results, \n  estvarname = \"estimate\", \n  se = \"se\", \n  true = 1, \n  by = \"simulation\",\n  methodvar = \"method\", \n  ref = \"Complete case\"\n  ) |&gt; \n  summary() |&gt; \n  tidy()\n\n\n\nHazard ratio distributionHazard ratio distribution (interactive)\n\n\n\n\nCode\nhr_distribution &lt;- results |&gt; \n  ggplot(aes(x = method, y = estimate)) +\n  geom_boxplot(outlier.colour = \"red\") +\n  geom_point(position = position_jitter(seed = 42), alpha = 0.15) +\n  geom_hline(yintercept = 1.0, color = \"forestgreen\", linetype = \"dashed\") +\n  labs(\n    x = \"Method\",\n    y = \"Hazard ratio (HR)\"\n    ) +\n  theme_bw() +\n  theme(\n    axis.title.x = element_blank(),\n    axis.text.x = element_text(angle = 35, vjust = 1, hjust=1)\n    ) +\n  facet_wrap(~simulation)\n\nhr_distribution\n\n\n\n\n\nFigure 4.1: Hazard ratio distribution by method across all simulated datasets.\n\n\n\n\n\n\n\n\nCode\nggplotly(hr_distribution)\n\n\n\n\n\n\n\n\n\n\n4.4.1 Root mean squared error (RMSE)\n\n\nCode\nrmse &lt;- rsimsum_ggplot(tidy_simsum = simsum_out, metric = \"rmse\")\n\n\n\nPlotTable\n\n\n\n\nCode\nrmse$plot\n\n\n\n\n\nFigure 4.2: Root mean squared error by method.\n\n\n\n\n\n\n\n\nCode\nrmse$table |&gt; \n  gt()\n\n\n\n\n\n\nTable 4.1:  Root mean squared error by method. \n  \n    \n      method\n      est\n      lower\n      upper\n    \n  \n  \n    \n      Continuous distribution (RIGHT)\n    \n    Unadjusted\n0.077\n0.074\n0.080\n    Complete case\n0.194\n0.186\n0.203\n    Imputed\n0.143\n0.136\n0.149\n    \n      Discrete odds (1, 2, 3, 4)\n    \n    Unadjusted\n0.077\n0.074\n0.080\n    Complete case\n0.188\n0.180\n0.196\n    Imputed\n0.143\n0.137\n0.149\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n4.4.2 Bias\n\n\nCode\nbias &lt;- rsimsum_ggplot(tidy_simsum = simsum_out, metric = \"bias\")\n\n\n\nPlotTable\n\n\n\n\nCode\nbias$plot\n\n\n\n\n\nFigure 4.3: Bias by method.\n\n\n\n\n\n\n\n\nCode\nbias$table |&gt; \n  gt()\n\n\n\n\n\n\nTable 4.2:  Bias by method. \n  \n    \n      method\n      est\n      lower\n      upper\n    \n  \n  \n    \n      Continuous distribution (RIGHT)\n    \n    Unadjusted\n-0.012\n-0.017\n-0.007\n    Complete case\n-0.107\n-0.117\n-0.097\n    Imputed\n0.089\n0.083\n0.096\n    \n      Discrete odds (1, 2, 3, 4)\n    \n    Unadjusted\n-0.012\n-0.017\n-0.007\n    Complete case\n-0.105\n-0.114\n-0.095\n    Imputed\n0.082\n0.075\n0.089\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n4.4.3 Coverage\n\n\nCode\ncoverage &lt;- rsimsum_ggplot(tidy_simsum = simsum_out, metric = \"coverage\")\n\n\n\nPlotTable\n\n\n\n\nCode\ncoverage$plot\n\n\n\n\n\nFigure 4.4: Coverage by method.\n\n\n\n\n\n\n\n\nCode\ncoverage$table |&gt; \n  gt()\n\n\n\n\n\n\nTable 4.3:  Coverage by method. \n  \n    \n      method\n      est\n      lower\n      upper\n    \n  \n  \n    \n      Continuous distribution (RIGHT)\n    \n    Unadjusted\n0.945\n0.931\n0.959\n    Complete case\n0.844\n0.822\n0.866\n    Imputed\n0.967\n0.956\n0.978\n    \n      Discrete odds (1, 2, 3, 4)\n    \n    Unadjusted\n0.945\n0.931\n0.959\n    Complete case\n0.858\n0.836\n0.880\n    Imputed\n0.969\n0.958\n0.980\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n4.4.4 Empirical standard error\n\n\nCode\nempse &lt;- rsimsum_ggplot(tidy_simsum = simsum_out, metric = \"empse\")\n\n\n\nPlotTable\n\n\n\n\nCode\nempse$plot\n\n\n\n\n\nFigure 4.5: Empirical standard error by method.\n\n\n\n\n\n\n\n\nCode\nempse$table |&gt; \n  gt()\n\n\n\n\n\n\nTable 4.4:  Empirical standard error by method. \n  \n    \n      method\n      est\n      lower\n      upper\n    \n  \n  \n    \n      Continuous distribution (RIGHT)\n    \n    Unadjusted\n0.076\n0.073\n0.079\n    Complete case\n0.162\n0.155\n0.169\n    Imputed\n0.111\n0.107\n0.116\n    \n      Discrete odds (1, 2, 3, 4)\n    \n    Unadjusted\n0.076\n0.073\n0.079\n    Complete case\n0.156\n0.150\n0.163\n    Imputed\n0.117\n0.112\n0.122\n  \n  \n  \n\n\n\n\n\n\n\n\n\n\n4.4.5 Variance\n\n\nCode\nvariance &lt;- rsimsum_ggplot(tidy_simsum = simsum_out, metric = \"variance\")\n\n\n\nPlotTable\n\n\n\n\nCode\nvariance$plot + \n  geom_point(size = 5)\n\n\n\n\n\nFigure 4.6: Variance by method.\n\n\n\n\n\n\n\n\nCode\nvariance$table |&gt; \n  gt()\n\n\n\n\n\n\nTable 4.5:  Variance by method. \n  \n    \n      method\n      est\n      lower\n      upper\n    \n  \n  \n    \n      Continuous distribution (RIGHT)\n    \n    Unadjusted\n0.006\nNA\nNA\n    Complete case\n0.018\nNA\nNA\n    Imputed\n0.049\nNA\nNA\n    \n      Discrete odds (1, 2, 3, 4)\n    \n    Unadjusted\n0.006\nNA\nNA\n    Complete case\n0.018\nNA\nNA\n    Imputed\n0.051\nNA\nNA"
  },
  {
    "objectID": "04_simulation_results.html#session-info",
    "href": "04_simulation_results.html#session-info",
    "title": "4  Simulation results",
    "section": "4.5 Session info",
    "text": "4.5 Session info\nScript runtime: 0.02 minutes.\n\nLoaded packagesSession infoRepositories\n\n\n\n\nCode\npander::pander(subset(data.frame(sessioninfo::package_info()), attached==TRUE, c(package, loadedversion)))\n\n\n\n\n\n\n\n\n\n\n \npackage\nloadedversion\n\n\n\n\narrow\narrow\n14.0.0.2\n\n\nassertthat\nassertthat\n0.2.1\n\n\ndplyr\ndplyr\n1.1.4\n\n\nggplot2\nggplot2\n3.4.4\n\n\ngt\ngt\n0.10.1\n\n\nhere\nhere\n1.0.1\n\n\nplotly\nplotly\n4.10.4\n\n\nrsimsum\nrsimsum\n0.11.3\n\n\ntictoc\ntictoc\n1.2\n\n\ntidyr\ntidyr\n1.3.1\n\n\n\n\n\n\n\n\n\nCode\npander::pander(sessionInfo())\n\n\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nlocale: en_US.UTF-8||en_US.UTF-8||en_US.UTF-8||C||en_US.UTF-8||en_US.UTF-8\nattached base packages: stats, graphics, grDevices, datasets, utils, methods and base\nother attached packages: plotly(v.4.10.4), tidyr(v.1.3.1), assertthat(v.0.2.1), rsimsum(v.0.11.3), gt(v.0.10.1), ggplot2(v.3.4.4), tictoc(v.1.2), arrow(v.14.0.0.2), here(v.1.0.1) and dplyr(v.1.1.4)\nloaded via a namespace (and not attached): sass(v.0.4.8), utf8(v.1.2.4), generics(v.0.1.3), renv(v.1.0.3), xml2(v.1.3.6), digest(v.0.6.33), magrittr(v.2.0.3), evaluate(v.0.23), grid(v.4.3.2), fastmap(v.1.1.1), rprojroot(v.2.0.4), jsonlite(v.1.8.8), sessioninfo(v.1.2.2), backports(v.1.4.1), httr(v.1.4.7), pander(v.0.6.5), purrr(v.1.0.2), fansi(v.1.0.6), crosstalk(v.1.2.1), viridisLite(v.0.4.2), scales(v.1.3.0), lazyeval(v.0.2.2), cli(v.3.6.2), rlang(v.1.1.2), ellipsis(v.0.3.2), bit64(v.4.0.5), munsell(v.0.5.0), withr(v.3.0.0), yaml(v.2.3.8), tools(v.4.3.2), checkmate(v.2.3.1), colorspace(v.2.1-0), vctrs(v.0.6.5), R6(v.2.5.1), ggridges(v.0.5.6), lifecycle(v.1.0.4), htmlwidgets(v.1.6.4), bit(v.4.0.5), pkgconfig(v.2.0.3), pillar(v.1.9.0), gtable(v.0.3.4), Rcpp(v.1.0.12), glue(v.1.6.2), data.table(v.1.15.0), xfun(v.0.41), tibble(v.3.2.1), tidyselect(v.1.2.0), knitr(v.1.45), farver(v.2.1.1), htmltools(v.0.5.7), rmarkdown(v.2.25), labeling(v.0.4.3) and compiler(v.4.3.2)\n\n\n\n\n\n\nCode\npander::pander(options('repos'))\n\n\n\nrepos:\n\n\n\n\n\n\nREPO_NAME\n\n\n\n\nhttps://packagemanager.posit.co/cran/latest"
  }
]